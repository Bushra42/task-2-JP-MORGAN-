src/App.tsx
import React, { useEffect, useState } from 'react';
import Graph from './Graph';

interface StockData {
  timestamp: string;
  top_ask_price: number;
}

const App: React.FC = () => {
  const [data, setData] = useState<StockData[]>([]);

  useEffect(() => {
    const fetchData = async () => {
      try {
        const response = await fetch('/api/stock-data');
        const newData: StockData[] = await response.json();
        setData(prevData => {
          const uniqueData = newData.filter(newItem =>
            !prevData.some(prevItem => prevItem.timestamp === newItem.timestamp)
          );
          return [...prevData, ...uniqueData];
        });
      } catch (error) {
        console.error('Error fetching data:', error);
      }
    };

    const intervalId = setInterval(fetchData, 1000);
    return () => clearInterval(intervalId);
  }, []);

  return (
    <div>
      <Graph data={data} />
    </div>
  );
};

export default App;




src/Graph.tsx
import React from 'react';
import { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';

interface StockData {
  timestamp: string;
  top_ask_price: number;
}

interface GraphProps {
  data: StockData[];
}

const Graph: React.FC<GraphProps> = ({ data }) => {
  return (
    <LineChart
      width={600}
      height={300}
      data={data}
      margin={{
        top: 5, right: 30, left: 20, bottom: 5,
      }}
    >
      <CartesianGrid strokeDasharray="3 3" />
      <XAxis dataKey="timestamp" />
      <YAxis />
      <Tooltip />
      <Legend />
      <Line type="monotone" dataKey="top_ask_price" stroke="#8884d8" activeDot={{ r: 8 }} />
    </LineChart>
  );
};

export default Graph;
